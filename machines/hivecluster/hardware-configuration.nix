# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "sd_mod" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/dd4d65ee-a6c8-4b38-8c48-2d7568a0711d";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-4ab51d74-1b6e-42dd-b373-380efc5dbd75".device = "/dev/disk/by-uuid/4ab51d74-1b6e-42dd-b373-380efc5dbd75";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/BCB4-8C74";
      fsType = "vfat";
    };

  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/0cc44f5f-9306-491c-ac13-3ce70f169b68";
      fsType = "ext4";
    };

  fileSystems."/var/lib/lxd/shmounts" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/var/lib/lxd/devlxd" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/b310f669-ba2b-4dd3-b8f4-cfe217ca68d6"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
